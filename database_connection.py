# -*- coding: utf-8 -*-
"""database_connection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P9Mclr5mZVPTpPBbHAwdkeH66miSOk9g

#**Stock Market Simulation Game** 
## Data Science Team:
**Data Science Manager** - Anade Davis

**Lead Data Scientist** - Ragavendhra Ramanan 

**Lead Machine Learning Engineer** - Tanjeel Ahmed 

**Lead Data Science Researcher** - Hafizah Ab Rahim

**Data Scientist** - Ivy Hsu

**Data Engineer** - Brandon Oppong-Antwi

**Data Science Researcher** -  Michael Ayedun


Sources: 
https://corporatefinanceinstitute.com/resources/knowledge/trading-investing/wall-street-survivor-stock-market-game/
shreyanshs7/Wallstreet-Django
https://github.com/Agtm48/Stock-Market-Simulator
"""

import sqlite3 #SQLite is a self-contained, file-based SQL database.
import os #Operating System
path = os.getcwd() #Create the file path from the operating system.And returns current working directory of a process
os.chdir(path) #changes the current working directory to the given path
dbpath = (str(os.getcwd()) + "\\Stocks.db") #returns the absolute path of the working directory where Python is currently running as a string for our db file
fpath = (str(os.getcwd() + "\\StockTickerList.txt")) #returns the absolute path of the working directory where Python is currently running as a string for our Stock tickers

#full_database method to create a Cursor object and call its execute() method to perform SQL commands:
def full_database():
    conn = sqlite3.connect(dbpath)
    c = conn.cursor()
    create_query = "CREATE TABLE IF NOT EXISTS Stocks" \
                   "(Ticker TEXT, Name TEXT, Sunday REAL, Monday REAL, Tuesday REAL, Wednesday REAL, " \
                   "Thursday REAL, Friday REAL, Saturday REAL)"
    c.execute(create_query)
    conn.commit()
    conn.close()
#insert_values method to allow us to insert stock values and new information into our updated sq database
def insert_values():
    conn = sqlite3.connect(dbpath)
    cur = conn.cursor()
    print(fpath)
    with open(fpath) as f:
        for line in f:
            temp = line.split(":")
            a = temp[0].strip()
            b = temp[1].strip()
            c = temp[2].strip()
            d = temp[3].strip()
            e = temp[4].strip()
            f = temp[5].strip()
            g = temp[6].strip()
            h = temp[7].strip()
            i = temp[8].strip()
            cur.execute('''INSERT INTO Stocks(Ticker, Name, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday)
                          VALUES(?,?,?,?,?,?,?,?,?)''', (a, b, c, d, e, f, g, h, i))
        conn.commit()
        conn.close()
stockDict = {
    1: "Sunday",
    2: "Monday",
    3: "Tuesday",
    4: "Wednesday",
    5: "Thursday",
    6: "Friday",
    7: "Saturday",
    8: "Saturday"

}
#Picking and parsing the users selecting information from the database
def display_stocks(day):
    conn = sqlite3.connect(dbpath)
    cur = conn.cursor()
    cur.execute("SELECT Ticker from Stocks")
    ticks = cur.fetchall()
    cur.execute("SELECT Name from Stocks")
    stock_name = cur.fetchall()
    cur.execute("SELECT " + str(stockDict[day]) + " from Stocks")
    stock_values = cur.fetchall()
    print("For Day #" + str(day) + ", or " + stockDict[day] + ", the stock values are:")
    for i in range(0, len(stock_name)):
        print(parse(str(ticks[i])) + " --> " + parse(str(stock_name[i])) + " --> $" + parse(str(stock_values[i])))

    return ticks, stock_name, stock_values
def parse(x):
    x = str(x)
    x = x.replace("('", "")
    x = x.replace("',),", "")
    x = x.replace(",),", "")
    x = x.replace("[", "")
    x = x.replace("]", "")
    x = x.replace("(", "")
    x = x.replace(",)", "")
    x = x.replace("'", "")
    return x
#Clean Data
def clean_data():
    conn = sqlite3.connect(dbpath)
    cur = conn.cursor()
    cur.execute("DELETE FROM Stocks")
    conn.commit()
    conn.close()
    print("[DEBUG] All values in the table have been deleted.")